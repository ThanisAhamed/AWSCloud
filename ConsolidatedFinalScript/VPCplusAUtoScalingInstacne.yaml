Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t1.micro
    AllowedValues:
    - t1.micro
    - m1.small
    - m1.medium
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    ConstraintDescription: must be a valid EC2 instance type.
  InstanceCount:
    Description: Number of EC2 instances to launch
    Type: Number
    Default: '1'
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: '64'
    m1.small:
      Arch: '64'
    m1.medium:
      Arch: '64'
    t2.micro:
      Arch: '64'
    t2.small:
      Arch: '64'
    t2.medium:
      Arch: '64'
    t2.large:
      Arch: '64'
  AWSRegionArch2AMI:
    us-east-1:
      '32': ami-aba768c2
      '64': ami-02f664ededb0d5286
    us-west-1:
      '32': ami-458fd300
      '64': ami-b18ed2f4
    us-west-2:
      '32': ami-fcff72cc
      '64': ami-feff72ce
    eu-west-1:
      '32': ami-018bb975
      '64': ami-998bb9ed
    sa-east-1:
      '32': ami-a039e6bd
      '64': ami-a239e6bf
    ap-southeast-1:
      '32': ami-425a2010
      '64': ami-5e5a200c
    ap-southeast-2:
      '32': ami-f98512c3
      '64': ami-43851279
    ap-northeast-1:
      '32': ami-7871c579
      '64': ami-7671c577
Resources:
 HandyProVPC:
  Type: AWS::EC2::VPC
  Properties:
   CidrBlock: 172.20.0.0/16 
   EnableDnsHostnames: true
   InstanceTenancy: default
   Tags:
    - Key: Name
      Value: HandyProVPC
    - Key: StackName
      Value: !Ref AWS::StackId	
    - Key: Project
      Value: HandyPro	
 PublicSubnetHPro:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref HandyProVPC
   AvailabilityZone: us-east-1a
   CidrBlock: 172.20.10.0/28
   Tags:
    - Key: Name
      Value: HandyProPublicSubnet
    - Key: StackName
      Value: !Ref AWS::StackId	
    - Key: Project
      Value: HandyPro
   MapPublicIpOnLaunch: true
 PrivateSubnetHPro:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref HandyProVPC
   AvailabilityZone: us-east-1b
   CidrBlock: 172.20.20.0/28
   Tags:
    - Key: Name
      Value: HandyProPrivateSubnet
    - Key: StackName
      Value: !Ref AWS::StackId	
    - Key: Project
      Value: HandyPro
   MapPublicIpOnLaunch: false
 InternetGatewayHP:
  Type: AWS::EC2::InternetGateway
  Properties:
   Tags:
    - Key: Name
      Value: InternetGatewayHandyPro
    - Key: StackName
      Value: !Ref AWS::StackId	
    - Key: Project
      Value: HandyPro
 AttachIGtoVPCHP:
  Type: AWS::EC2::VPCGatewayAttachment
  Properties:
   VpcId: !Ref HandyProVPC
   InternetGatewayId: !Ref InternetGatewayHP
 PublicRouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
   VpcId: !Ref HandyProVPC
   Tags:
     - Key: Name
       Value: RouteTableHandyPro
     - Key: StackName
       Value: !Ref AWS::StackId	
     - Key: Project
       Value: HandyPro
 PublicRouteRule: 
  Type: AWS::EC2::Route
  Properties:
   RouteTableId: !Ref PublicRouteTable
   DestinationCidrBlock: 0.0.0.0/0
   GatewayId: !Ref InternetGatewayHP
 PublicRoutetableSubnetAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   RouteTableId: !Ref PublicRouteTable
   SubnetId: !Ref PublicSubnetHPro
 NatGateway:
  Type: "AWS::EC2::NatGateway"
  DependsOn: NatPublicIP
  Properties: 
   AllocationId: !GetAtt NatPublicIP.AllocationId
   SubnetId: !Ref PublicSubnetHPro
 NatPublicIP:
  Type: "AWS::EC2::EIP"
  DependsOn: HandyProVPC
  Properties:
   Domain: vpc
 PrivateRouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
   VpcId: !Ref HandyProVPC
   Tags:
    - Key: Name
      Value: RouteTableHandyPro
    - Key: StackName
      Value: !Ref AWS::StackId	
    - Key: Project
      Value: HandyPro
 PrivateRouteRule: 
  Type: AWS::EC2::Route
  Properties:
   RouteTableId: !Ref PrivateRouteTable
   DestinationCidrBlock: 0.0.0.0/0
   NatGatewayId: !Ref NatGateway
 PrivateRoutetableSubnetAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   RouteTableId: !Ref PrivateRouteTable
   SubnetId: !Ref PrivateSubnetHPro
 GeneralsshSecurityGroup:
  Type: AWS::EC2::SecurityGroup
  Properties:
   GroupName: HandyProSSHRules
   GroupDescription: Enable SSH access via 22 & 7222
   SecurityGroupIngress:
    - IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0 
    - IpProtocol: tcp
      FromPort: 7222
      ToPort: 7222
      CidrIp: 0.0.0.0/0
   Tags: 
    - Key: Name
      Value: HandyProSSHSG
   VpcId: !Ref HandyProVPC
 GeneralHTTPSecurityGroup:
  Type: AWS::EC2::SecurityGroup
  Properties:
   GroupName: HandyProHTTPRules
   GroupDescription: Enable HTTP access via 80 & 8080
   SecurityGroupIngress:
    - IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0 
    - IpProtocol: tcp
      FromPort: 8080
      ToPort: 8080
      CidrIp: 0.0.0.0/0
   Tags: 
    - Key: Name
      Value: HandyProHTTPSG
   VpcId: !Ref HandyProVPC
 GeneralHTTPsSecurityGroup:
  Type: AWS::EC2::SecurityGroup
  Properties:
   GroupName: HandyProHTTPsRules
   GroupDescription: Enable HTTPs access via 443
   SecurityGroupIngress:
    - IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: 0.0.0.0/0 
   Tags: 
    - Key: Name
      Value: HandyProHTTPsSG
   VpcId: !Ref HandyProVPC
 HandyProNWACLPublic:
  Type: AWS::EC2::NetworkAcl
  Properties:
   VpcId: !Ref HandyProVPC
   Tags:
    - Key: Name
      Value: HandyProNetworlACL
    - Key: Project
      Value: HandyPro
 InboundHandyProPublicNWAClEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref HandyProNWACLPublic
   RuleNumber: 100
   RuleAction: allow
   Protocol: 6
   Egress: false
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: 20
    To: 500
 OutBoundHandyProPublicNWAClEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref HandyProNWACLPublic
   RuleNumber: '100'
   Protocol: '6'
   RuleAction: allow
   Egress: 'true'
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: '0'
    To: '65535'
 PublicSubnetNWACLAssciation:
  Type: AWS::EC2::SubnetNetworkAclAssociation
  Properties:
   SubnetId: !Ref PublicSubnetHPro
   NetworkAclId: !Ref HandyProNWACLPublic
 HandyProNWACLPrivate:
  Type: AWS::EC2::NetworkAcl
  Properties:
   VpcId: !Ref HandyProVPC
   Tags:
    - Key: Name
      Value: HandyProNetworlACL
    - Key: Project
      Value: HandyPro
 INBoundHandyProPrivateNWAClEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref HandyProNWACLPrivate
   RuleNumber: 100
   RuleAction: allow
   Protocol: 6
   Egress: false
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: 0
    To: 65535
 OutBoundHandyProPrivateNWAClEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref HandyProNWACLPrivate
   RuleNumber: '100'
   Protocol: '6'
   RuleAction: allow
   Egress: 'true'
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: '0'
    To: '65535'
 PrivateSubnetNWACLAssciation:
  Type: AWS::EC2::SubnetNetworkAclAssociation
  Properties:
   SubnetId: !Ref PrivateSubnetHPro
   NetworkAclId: !Ref HandyProNWACLPrivate
 ElasticLoadBalancer:
  Type: AWS::ElasticLoadBalancing::LoadBalancer
  Properties:
   SecurityGroups:
    - Ref : GeneralHTTPSecurityGroup
    - Ref : GeneralHTTPsSecurityGroup
    - Ref : GeneralsshSecurityGroup
   Subnets:
    - Ref: PrivateSubnetHPro
   Listeners:
    - LoadBalancerPort: '80'
      InstancePort: '80'
      Protocol: HTTP
   HealthCheck:
    Target: HTTP:80/
    HealthyThreshold: '3'
    UnhealthyThreshold: '5'
    Interval: '90'
    Timeout: '60'
 HandyProAutoscaling:
  Type: AWS::AutoScaling::AutoScalingGroup
  Properties: 
   AutoScalingGroupName: HandyProInstanceASGroup
   VPCZoneIdentifier: 
    - Ref : PrivateSubnetHPro
   LaunchConfigurationName: HandyProLaunchConfig
   DesiredCapacity: !Ref InstanceCount
   MinSize: 1
   MaxSize: 5
   LoadBalancerNames: 
    - Ref : ElasticLoadBalancer
   Tags:
    - Key : Name
      Value: HandroProASInstance
    - Key : Project
      Value: HandyPro
 HandyProLaunchConfig:
  Type: AWS::AutoScaling::LaunchConfiguration
  Properties:
   LaunchConfigurationName: HandyProLaunchConfiguration
   KeyName: Training
   ImageId:
    Fn::FindInMap:
     - AWSRegionArch2AMI
     - Ref: AWS::Region
     - Fn::FindInMap:
       - AWSInstanceType2Arch
       - Ref: InstanceType
       - Arch
   UserData:
    Fn::Base64: '80'
   SecurityGroups:
    - Ref : GeneralHTTPSecurityGroup
    - Ref : GeneralHTTPsSecurityGroup
    - Ref : GeneralsshSecurityGroup
   InstanceType: !Ref InstanceType
 HandyProScalingPolicy:
  Type: AWS::AutoScaling::ScalingPolicy
  Properties:
   AutoScalingGroupName: !Ref HandyProAutoscaling
   PolicyType: TargetTrackingScaling
   TargetTrackingConfiguration:
    PredefinedMetricSpecification:
     PredefindedMetricType: ASAverageCPUUtilization
    TargetValue: 80
Outputs:
  URL:
    Description: URL of the website
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - ElasticLoadBalancer
          - DNSName