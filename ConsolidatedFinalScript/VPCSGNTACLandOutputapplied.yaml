# This Is IaC for HandyPro Project 
# Initially, VPC were created in the range of 172.30.0.0/16
# Data Center were hosted in the Ohio Region(US)
# The below is the VPC  
##############Create VPC################################
Resources:
 HandyProVPC:
  Type: AWS::EC2::VPC
  Properties:
   CidrBlock: 172.30.0.0/16 # Modify when need
   EnableDnsHostnames: true
   InstanceTenancy: default
   Tags:
    - Key: Name
      Value: job.handypro.com # Modify when need
#    - Key: StackName
#     Value: !Ref AWS::StackId	
#    - Key: Project
#      Value: HandyPro	
#########################################################
# Create 2 Public Subnets and Private Subnets 
# Mind the AvailabilityZone(2) while creating 
############ Create Public Subnet 1 #######################
########## AZ us-east-2a ##################################
 PublicSubnet1HPro:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref HandyProVPC
   AvailabilityZone: us-east-2a  # Modify when need
   CidrBlock: 172.30.10.0/26     # Modify when need
   Tags:
    - Key: Name
      Value: Public Subnet-job.handypro.com
#    - Key: Project
#      Value: HandyPro
   MapPublicIpOnLaunch: true
###########################################################
############ Create Public Subnet 2 #######################
############AZ us-east-2b #################################
##########
 PublicSubnet2HPro:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref HandyProVPC
   AvailabilityZone: us-east-2b  # Modify when need
   CidrBlock: 172.30.100.0/26     # Modify when need
   Tags:
    - Key: Name
      Value: Public Subnet-job.handypro.com(HA)
#    - Key: Project
#      Value: HandyPro
   MapPublicIpOnLaunch: true
###########################################################
###############Private Subnet 1 ###########################
########## AZ us-east-2a ##################################
 PrivateSubnet1HPro:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref HandyProVPC
   AvailabilityZone: us-east-2a # Modify when need
   CidrBlock: 172.30.20.0/26    # modify when need
   Tags:
    - Key: Name
      Value: Private Subnet-job.handypro.com
#    - Key: Project
#      Value: HandyPro
   MapPublicIpOnLaunch: false
###########################################################
###############Private Subnet 2 ###########################
########## AZ us-east-2b ##################################
 PrivateSubnet2HPro:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref HandyProVPC
   AvailabilityZone: us-east-2a # Modify when need
   CidrBlock: 172.30.200.0/26    # Modify when need
   Tags:
    - Key: Name
      Value: Private Subnet-job.handypro.com(HA)
#    - Key: Project
#      Value: HandyPro
   MapPublicIpOnLaunch: false
#############################################################
############### Create InternetGateway ######################
############### Attach Internet G/W to VPC ##################
 InternetGatewayHP:
  Type: AWS::EC2::InternetGateway
  Properties:
   Tags:
    - Key: Name
      Value: IG-job.handypro.com  # Modify when need
#    - Key: Project
#      Value: HandyPro
####### Attach Internet G/W to VPC #########################
 AttachIGtoVPCHP:
  Type: AWS::EC2::VPCGatewayAttachment
  Properties:
   VpcId: !Ref HandyProVPC
   InternetGatewayId: !Ref InternetGatewayHP
############################################################
############################################################
###Create Route Table (one Public RT & one Private RT)######
###Associate the Subnets & attach the relevant Route rule###
################Public Route Table #########################
##### Attach to Internet G/W################################
############Associate the public subnets####################
 PublicRouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
   VpcId: !Ref HandyProVPC
   Tags:
     - Key: Name
       Value: PublicRT-job.handypro.com
     - Key: StackName
       Value: !Ref AWS::StackId	
     - Key: Project
       Value: HandyPro
 PublicRouteRule: 
  Type: AWS::EC2::Route
  Properties:
   RouteTableId: !Ref PublicRouteTable
   DestinationCidrBlock: 0.0.0.0/0
   GatewayId: !Ref InternetGatewayHP
 PublicRoutetableSubnetAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   RouteTableId: !Ref PublicRouteTable
   SubnetId:
    - !Ref PublicSubnet1HPro
    - !Ref PublicSubnet2HPro
############################################################
############################################################
######### Create NAT Gateway ###############################
#### NAT must be created in Public Subnet ##################
##### Random EIP will be created and attached ##############
 NatGateway:
  Type: "AWS::EC2::NatGateway"
  DependsOn: NatPublicIP
  Properties: 
   AllocationId: !GetAtt NatPublicIP.AllocationId
   SubnetId: !Ref PublicSubnet1HPro
   Tags:
    - Key: Name
      Value
 NatPublicIP:
  Type: "AWS::EC2::EIP"
  DependsOn: HandyProVPC
  Properties:
   Domain: vpc
############################################################
########### Private Route Table ############################
##### Associate private subnets&Attach NAT G/W in Route ####
 PrivateRouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
   VpcId: !Ref HandyProVPC
   Tags:
    - Key: Name
      Value: PrivateRT-job.handypro.com
#    - Key: Project
#      Value: HandyPro
 PrivateRouteRule: 
  Type: AWS::EC2::Route
  Properties:
   RouteTableId: !Ref PrivateRouteTable
   DestinationCidrBlock: 0.0.0.0/0
   NatGatewayId: !Ref NatGateway
 PrivateRoutetableSubnetAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   RouteTableId: !Ref PrivateRouteTable
   SubnetId:
    - !Ref PrivateSubnet1HPro
    - !Ref PrivateSubnet2HPro
 GeneralsshSecurityGroup:
  Type: AWS::EC2::SecurityGroup
  Properties:
   GroupName: HandyProSSHRules
   GroupDescription: Enable SSH access via 22 & 7222
   SecurityGroupIngress:
    - IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0 
    - IpProtocol: tcp
      FromPort: 7222
      ToPort: 7222
      CidrIp: 0.0.0.0/0
   Tags: 
    - Key: Name
      Value: HandyProSSHSG
   VpcId: !Ref HandyProVPC
 GeneralHTTPSecurityGroup:
  Type: AWS::EC2::SecurityGroup
  Properties:
   GroupName: HandyProHTTPRules
   GroupDescription: Enable HTTP access via 80 & 8080
   SecurityGroupIngress:
    - IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0 
    - IpProtocol: tcp
      FromPort: 8080
      ToPort: 8080
      CidrIp: 0.0.0.0/0
   Tags: 
    - Key: Name
      Value: HandyProHTTPSG
   VpcId: !Ref HandyProVPC
 GeneralHTTPsSecurityGroup:
  Type: AWS::EC2::SecurityGroup
  Properties:
   GroupName: HandyProHTTPsRules
   GroupDescription: Enable HTTPs access via 443
   SecurityGroupIngress:
    - IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: 0.0.0.0/0 
   Tags: 
    - Key: Name
      Value: HandyProHTTPsSG
   VpcId: !Ref HandyProVPC
 HandyProNWACLPublic:
  Type: AWS::EC2::NetworkAcl
  Properties:
   VpcId: !Ref HandyProVPC
   Tags:
    - Key: Name
      Value: HandyProNetworlACL
    - Key: Project
      Value: HandyPro
 InboundHandyProPublicNWAClEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref HandyProNWACLPublic
   RuleNumber: 100
   RuleAction: allow
   Protocol: 6
   Egress: false
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: 20
    To: 500
 OutBoundHandyProPublicNWAClEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref HandyProNWACLPublic
   RuleNumber: '100'
   Protocol: '6'
   RuleAction: allow
   Egress: 'true'
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: '0'
    To: '65535'
 PublicSubnetNWACLAssciation:
  Type: AWS::EC2::SubnetNetworkAclAssociation
  Properties:
   SubnetId: !Ref PublicSubnetHPro
   NetworkAclId: !Ref HandyProNWACLPublic
 HandyProNWACLPrivate:
  Type: AWS::EC2::NetworkAcl
  Properties:
   VpcId: !Ref HandyProVPC
   Tags:
    - Key: Name
      Value: HandyProNetworlACL
    - Key: Project
      Value: HandyPro
 INBoundHandyProPrivateNWAClEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref HandyProNWACLPrivate
   RuleNumber: 100
   RuleAction: allow
   Protocol: 6
   Egress: false
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: 0
    To: 65535
 OutBoundHandyProPrivateNWAClEntry:
  Type: AWS::EC2::NetworkAclEntry
  Properties:
   NetworkAclId: !Ref HandyProNWACLPrivate
   RuleNumber: '100'
   Protocol: '6'
   RuleAction: allow
   Egress: 'true'
   CidrBlock: 0.0.0.0/0
   PortRange:
    From: '0'
    To: '65535'
 PrivateSubnetNWACLAssciation:
  Type: AWS::EC2::SubnetNetworkAclAssociation
  Properties:
   SubnetId: !Ref PrivateSubnetHPro
   NetworkAclId: !Ref HandyProNWACLPrivate
Outputs:
 VPCattachtoInstance:
  Description: VPC for our Company
  Value: !Ref HandyProVPC
  Export:
   Name: VPCHandyPro
 SSHSecurityGroup:
  Description: SSH Security for EC2
  Value: !Ref GeneralsshSecurityGroup
  Export:
   Name: SecurityGroupSSH
 HTTPSecurityGroup:
  Description: HTTP Security for EC2
  Value: !Ref GeneralHTTPSecurityGroup
  Export:
   Name: SecurityGroupHTTP
 HTTPsSecurityGroup:
  Description: HTTPs Security for EC2
  Value: !Ref GeneralHTTPsSecurityGroup
  Export:
   Name: SecurityGroupHTTPs
 PublicSubnetexport:
  Description: Public subnet to export for EC2
  Value: !Ref PublicSubnetHPro
  Export:
   Name: PublicSunbettoConnect